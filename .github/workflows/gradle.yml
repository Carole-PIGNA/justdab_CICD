name: Java CI with Gradle

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  tests-before-build:

    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:latest
        ports:
          - 3333:3306
        options: >-
          --health-cmd "mysqladmin ping --silent"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: just_dab_db

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '21'

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Run tests
      run: ./gradlew test
      env:
        SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/just_dab_db
        SPRING_DATASOURCE_USERNAME: root
        SPRING_DATASOURCE_PASSWORD: password


    - name: Archive test reports
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-reports
        path: build/reports/tests/test/

  build-if-tests-successful:
    runs-on: ubuntu-latest
    needs: tests-before-build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
          
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Archive JAR files
        uses: actions/upload-artifact@v3
        with:
          name: my-jar-files
          path: build/libs/*.jar

  build-docker-image:
    runs-on: ubuntu-latest
    needs: build-if-tests-successful

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download JAR file
        uses: actions/download-artifact@v3
        with:
          name: my-jar-files
          path: ./build/libs

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/my-app-image:latest

     

